paths:
  /users/{userId}:
    get:
      tags:
      - user-controller
      operationId: getUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDetailResponseDto"
    put:
      tags:
      - user-controller
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserUpdateResponseDto"
    delete:
      tags:
      - user-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /todos/{todoId}:
    get:
      tags:
      - todo-controller
      operationId: getTodo
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TodoSimpleResponseDto"
    put:
      tags:
      - todo-controller
      operationId: updateTodo
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TodoUpdateResponseDto"
    delete:
      tags:
      - todo-controller
      operationId: deleteTodo
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /todos/comments/{commentId}:
    get:
      tags:
      - comment-controller
      operationId: getComment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDetailResponseDto"
    put:
      tags:
      - comment-controller
      operationId: updateComment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentUpdateRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentUpdateResponseDto"
    delete:
      tags:
      - comment-controller
      operationId: deleteComment
      parameters:
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /todos:
    get:
      tags:
      - todo-controller
      operationId: getTodos
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageTodoDetailResponseDto"
    post:
      tags:
      - todo-controller
      operationId: saveTodo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoSaveRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TodoSaveResponseDto"
  /todos/{todoId}/managers:
    get:
      tags:
      - manager-controller
      operationId: getManagers
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ManagerSimpleResponseDto"
    post:
      tags:
      - manager-controller
      operationId: saveManager
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagerSaveRequestDto"
        required: true
      responses:
        "200":
          description: OK
  /todos/{todoId}/comments:
    get:
      tags:
      - comment-controller
      operationId: getComments
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentDetailResponseDto"
    post:
      tags:
      - comment-controller
      operationId: saveComment
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentSaveRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentSaveResponseDto"
  /auth/signup:
    post:
      tags:
      - auth-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SignupResponseDto"
  /auth/signin:
    post:
      tags:
      - auth-controller
      operationId: signin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequestDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SigninResponseDto"
  /users:
    get:
      tags:
      - user-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDetailResponseDto"
  /todos/{todoId}/managers/optimized:
    get:
      tags:
      - manager-controller
      operationId: getManagersOptimized
      parameters:
      - name: todoId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ManagerSimpleResponseDto"
  /todos/optimized:
    get:
      tags:
      - todo-controller
      operationId: getTodosOptimized
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageTodoDetailResponseDto"
components:
  schemas:
    UserUpdateRequestDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    UserUpdateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    TodoUpdateRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        title:
          type: string
        contents:
          type: string
    TodoUpdateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        title:
          type: string
        content:
          type: string
        weather:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
    CommentUpdateRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        contents:
          type: string
    CommentUpdateResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    TodoSaveRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        title:
          type: string
        contents:
          type: string
    TodoSaveResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        title:
          type: string
        contents:
          type: string
        weather:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    ManagerSaveRequestDto:
      type: object
      properties:
        todoUserId:
          type: integer
          format: int64
        managerUserId:
          type: integer
          format: int64
    CommentSaveRequestDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        contents:
          type: string
    CommentSaveResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    SignupRequestDto:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
        userRole:
          type: string
    SignupResponseDto:
      type: object
      properties:
        bearerToken:
          type: string
    SigninRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    SigninResponseDto:
      type: object
      properties:
        bearerToken:
          type: string
    UserDetailResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    PageTodoDetailResponseDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/TodoDetailResponseDto"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortObject"
        offset:
          type: integer
          format: int64
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    TodoDetailResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        title:
          type: string
        contents:
          type: string
        weather:
          type: string
        commentCount:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    TodoSimpleResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
    ManagerSimpleResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
    CommentDetailResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: "#/components/schemas/UserDto"
        contents:
          type: string
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
